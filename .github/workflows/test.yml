name: Test
on: [push, pull_request]

jobs:
  lint:
    name: Lint
    timeout-minutes: 10
    strategy:
      matrix:
        platform: [ubuntu-latest]
        go: [1.18.x]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: Install go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - uses: golangci/golangci-lint-action@v2
        with:
          # must be specified without patch version
          version: v1.45

  format:
    name: Format
    strategy:
      matrix:
        platform: [ubuntu-latest]
        go: [1.18.x]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - name: Check formatting
        run: |
          make format-check

  # Make sure local_repository.pidx is linted against PackIndex.xsd
  xmllint:
    name: Xmllint
    strategy:
      matrix:
        platform: [ubuntu-latest]
        go: [1.18.x]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install libxml2-utils
      - name: Check if local_repository.pidx is valid
        run: |
          make test-xmllint-localrepository

  test:
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]
        go: [1.18.x]
    name: "${{ matrix.platform }} | ${{ matrix.go }}"
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - name: Unit testing
        run: |
          make coverage-check

  test-arm64:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        go: [1.18.x]
        arch: [aarch64]
        distro: [ubuntu_latest]
    name: "${{ matrix.platform }} | ${{ matrix.go }} | ${{ matrix.arch }}"
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Unit testing
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          env: |
            GIT_DISCOVERY_ACROSS_FILESYSTEM: 1
          install: |
            apt-get update -qq -y
            apt-get install -qq -y git make golang=2:1.18\~0ubuntu2
          run: |
            git clone --depth 1 https://github.com/$GITHUB_REPOSITORY --quiet
            cd cpackget
            git fetch origin $GITHUB_REF:local_branch
            git checkout local_branch
            make ARCH=arm64 GOOS=linux coverage-check
